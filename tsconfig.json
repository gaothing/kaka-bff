{
  "compilerOptions": {
    "target": "esnext",                               /** 指定ECMAScript目标版本 "ES3"（默认）,"ESNext"最新的生成目标列表为 ES proposed features*/
    "module": "esnext",                               /** 指定生成哪个模块系统代码*/
    "moduleResolution": "node",                       /** 决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）*/
    "strict": true,                                   /** 启用所有严格类型检查选项。启用 --strict相当于启用 --noImplicitAny, --noImplicitThis, --alwaysStrict， --strictNullChecks和 --strictFunctionTypes和--strictPropertyInitialization。*/
    "forceConsistentCasingInFileNames": true,         /** 禁止对同一个文件的不一致的引用*/
    "allowSyntheticDefaultImports": true,             /** 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。*/
    "suppressImplicitAnyIndexErrors":true,            /** 阻止 --noImplicitAny对缺少索引签名的索引对象报错*/
    "strictFunctionTypes": false,                     /** 禁用函数参数双向协变检查*/
    "jsx": "preserve",                                /** .tsx文件里支持JSX： "React"或 "Preserve"。*/
    "baseUrl": ".",                                   /** 解析非相对模块名的基准目录*/
    "allowJs": true,                                  /** 允许编译javascript文件*/
    "sourceMap": true,                                /** 生成相应的 .map文件。*/
    "esModuleInterop": true,
    "resolveJsonModule": true,
    "noUnusedLocals": true,                           /** 若有未使用的局部变量则抛错。*/
    "noUnusedParameters": true,                       /**	若有未使用的参数则抛错。*/
    "experimentalDecorators": true,                   /**启用实验性的ES装饰器。*/
    "lib": ["dom", "esnext"],                         /** 编译过程中需要引入的库文件的列表。*/
    // "types": ["vite/client", "jest"],                 /**	要包含的类型声明文件名列表*/
    "typeRoots": [ "./types"],  /**	要包含的类型声明文件名列表*/
    "noImplicitAny": false,                           /** 在表达式和声明上有隐含的 any类型时报错*/
    "skipLibCheck": true,                             /** 忽略所有的声明文件（ *.d.ts）的类型检查。*/
    // "paths": {                                        /** 模块名到基于 baseUrl的路径映射的列表。*/
    //   "/@/*": ["src/*"],
    //   "/#/*": ["types/*"],
    //   "/~/*": ["src/api/serviceModels/*"]
    // }
  },
  "include": [                                        /** 包含*/
    "api/**/*.ts",
   
  ],
  "exclude": ["node_modules", "dist", "**/*.js","**/*.md"]
}
